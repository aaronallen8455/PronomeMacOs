// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using Pronome.Mac.Visualizer.Bounce;
using System.Linq;
using CoreGraphics;
using CoreAnimation;

namespace Pronome.Mac
{
    public partial class BounceView : AbstractVisualizerView
    {
        #region Protected properties
        protected Lane[] Lanes;

        protected Ball[] Balls;

        protected CALayer TickLayer;
        #endregion

        public BounceView(IntPtr handle) : base(handle)
        {
            AnimationLayer.Delegate = new BounceLayerDelegate();

            TickLayer = new CALayer();
            TickLayer.ContentsScale = NSScreen.MainScreen.BackingScaleFactor;

            Layer.AddSublayer(TickLayer);

            // draw the framework
            //AnimationLayer.SetNeedsDisplay();
            //TickLayer.SetNeedsDisplay();
        }

        #region public methods
        public override void DrawFrame(double bpm)
        {
            BounceHelper.ElapsedBpm = bpm;

            // animate the balls

            // animate the tick marks
            TickLayer.SetNeedsDisplay();
        }
        #endregion

        #region protected methods
        protected override CGRect GetFrame(nfloat winWidth, nfloat winHeight)
        {
            nfloat min = winWidth < winHeight ? winWidth : winHeight;

            // a value from 0 to 1
            nfloat spread = UserSettings.GetSettings().BounceWidthPad * 2;
            nfloat width, height, xPos, yPos;

            var ratio = winHeight / winWidth;
            var spreadRatio = 1 / (spread + 1);

            if (spreadRatio > ratio)
            {
                height = winHeight;
                width = height * (spread + 1);

                yPos = 0;
                xPos = winWidth / 2 - width / 2;
            }
            else
            {
                width = winWidth;
				height = width / (1 + spread);

                xPos = 0;
                yPos = winHeight / 2 - height / 2;
            }

            BounceHelper.SetDimensions(width, height);

			// create the elements. We need to initialize them here when all the dimensions are set.
			Lanes = Metronome.Instance.Layers.Select(x => new Lane(x)).ToArray();
            Balls = Metronome.Instance.Layers.Select(x => new Ball(x, Layer)).ToArray();
            TickLayer.Delegate = new TickMarksDelegate(Lanes);

            return new CGRect(xPos, yPos, width, height);
        }
        #endregion

        public override void ViewWillMoveToWindow(NSWindow newWindow)
        {
            base.ViewWillMoveToWindow(newWindow);


        }
    }
}
